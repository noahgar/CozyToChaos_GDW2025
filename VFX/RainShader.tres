[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://cx7ow7xyhvybe"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wp1ty"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_tdlge"]
parameter_name = "RaindropTex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_a5y52"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_wp1ty"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wp1ty"]
operator = 2

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_wp1ty"]
billboard_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tdlge"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_iyaof"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_wp1ty"]
default_input_values = [0, 0.001, 1, 1.0, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wp1ty"]
parameter_name = "Width"
default_value_enabled = true
default_value = 0.1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform float Width = 0.10000000149012;
uniform sampler2D RaindropTex;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// FloatParameter:6
	float n_out6p0 = Width;


// VectorCompose:5
	float n_in5p1 = 1.00000;
	float n_in5p2 = 1.00000;
	vec3 n_out5p0 = vec3(n_out6p0, n_in5p1, n_in5p2);


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 * n_out5p0;


	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], MODEL_MATRIX[1], vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, MODEL_MATRIX[1].xyz)), 0.0), MODEL_MATRIX[3]);
		__mvm = __mvm * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0 / length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = __mvm;
	}


// Output:0
	VERTEX = n_out4p0;
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(RaindropTex, UV);
	float n_out6p1 = n_out6p0.r;


// VectorOp:5
	vec4 n_out5p0 = n_out2p0 * n_out6p0;
	float n_out5p4 = n_out5p0.a;


// FloatOp:7
	float n_out7p0 = n_out5p4 * n_out6p1;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out7p0;


}
"
flags/unshaded = true
flags/shadows_disabled = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_wp1ty")
nodes/vertex/2/position = Vector2(-20, 420)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_tdlge")
nodes/vertex/3/position = Vector2(-320, 100)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_iyaof")
nodes/vertex/4/position = Vector2(0, 160)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorCompose_wp1ty")
nodes/vertex/5/position = Vector2(-260, 280)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatParameter_wp1ty")
nodes/vertex/6/position = Vector2(-660, 280)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10, 3, 0, 4, 0, 4, 0, 0, 0, 6, 0, 5, 0, 5, 0, 4, 1)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_wp1ty")
nodes/fragment/2/position = Vector2(-560, -120)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_tdlge")
nodes/fragment/4/position = Vector2(-680, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_a5y52")
nodes/fragment/5/position = Vector2(-100, 20)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_wp1ty")
nodes/fragment/6/position = Vector2(-360, 280)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_wp1ty")
nodes/fragment/7/position = Vector2(120, 360)
nodes/fragment/connections = PackedInt32Array(2, 0, 5, 0, 4, 0, 6, 2, 6, 0, 5, 1, 2, 0, 0, 0, 6, 1, 7, 1, 5, 4, 7, 0, 7, 0, 0, 1)
